name: develop CI-CD

on:
  push:
    branches:
      - develop

env:
  S3_BUCKET_NAME: joberchip-s3 #S3 버킷 생성시 설정
  API_DEV_SERVER_RESOURCE_PATH: ./api/server-v1/src/main/resources/application-dev.yml #api-server-v1 module
  CODE_DEPLOY_APPLICATION_NAME: joberchip-be-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: joberchip-be-deploy-group

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set api server yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.API_DEV_SERVER_RESOURCE_PATH}}
        env:
          jwt-secret-key: ${{ secrets.JWT_SECRET_KEY }}
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USER }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD}}
          spring.datasource.driver-class-name: ${{ secrets.DB_DRIVER }}
          cloud.aws.s3.bucket: ${{ secrets.AWS_BUCKET_NAME }}
          cloud.aws.region.static : ${{ secrets.AWS_REGION }}
          cloud.aws.credentials.access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean :api-server-v1:buildNeeded --stacktrace --info -x test
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip